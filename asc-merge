#!/usr/bin/perl

use FindBin;
use lib "$FindBin::Bin/lib";
use Image::Magick;
use Data::Dumper;
use CoastLib;
use strict;
use warnings;

# params: infile infile infile... outfile

my $BASEDIR = "$FindBin::Bin/..";
my $output = pop @ARGV;
my $input1 = shift @ARGV;
my @other_inputs = @ARGV;

my $lidar = CoastLib::readLidarAsc( $input1 );
foreach my $input2 ( @other_inputs )
{
	my $lidar2 = CoastLib::readLidarAsc( $input2 );
	foreach my $metafield (qw/ cellsize ncols nrows xllcorner yllcorner /)
	{
		if( $lidar->{$metafield} ne $lidar2->{$metafield} )
		{
			die "Metafield $metafield mismatch: ".$lidar->{$metafield}." vs ".$lidar2->{$metafield}	;
		}
	}
	for( my $y=0; $y<$lidar->{nrows}; ++$y )
	{
		for( my $x=0; $x<$lidar->{nrows}; ++$x )
		{
			if( $lidar->{cells}->[$y]->[$x] == $lidar->{NODATA_value} 
			 && $lidar2->{cells}->[$y]->[$x] != $lidar2->{NODATA_value} )
			{
				$lidar->{cells}->[$y]->[$x] = $lidar2->{cells}->[$y]->[$x];
			}
		}
	}		
}
$lidar->write( $output );
exit;
__DATA__
#ROW: foreach my $row ( @$lidar->{cells} )
#{
#	CELL: foreach my $cell ( @$row )
#	{
#		next CELL if( $cell == $metadata->{NODATA_value} );
#		if( $cell > $max ) { $max = $cell; }
#		if( $cell < $min ) { $min = $cell; }
#	}
#}

my $image = Image::Magick->new;
$image->Set(size=>$lidar->{'ncols'}.'x'.$lidar->{'nrows'});
$image->ReadImage('canvas:white');

for my $y ( 0..($lidar->{nrows}-1) )
{
	my $row = $lidar->{cells}->[$y];
	for my $x ( 0..($lidar->{ncols}-1) )
	{
		my $cell = $row->[$x];
		my $color;
		if( $cell == $lidar->{NODATA_value} )
		{
			$color = $NODATA_color;
		}
		else
		{
			my $intensity = 255*255*($cell-$min)/($max-$min);
			$color = "$intensity,$intensity,$intensity,0";
		}
		$image->Set("pixel[$x,$y]"=>$color);
	}
}
$image->write( "png:$output" );


